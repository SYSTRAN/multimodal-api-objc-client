#import <Foundation/Foundation.h>
#import "SystranSpeechAlignResponse.h"
#import "SystranSpeechDetectLanguageResponse.h"
#import "SystranSpeechSegmentResponse.h"
#import "SystranSpeechSupportedLanguagesResponse.h"
#import "SystranSpeechTranscribeResponse.h"
#import "SystranObject.h"
#import "SystranApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface SystranSpeechApi: NSObject

@property(nonatomic, assign)SystranApiClient *apiClient;

-(instancetype) initWithApiClient:(SystranApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(SystranSpeechApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(SystranSpeechApi*) sharedAPI;
///
///
/// Align speech
/// Align text and audio files.
///
/// @param audioFile Audio file ([details](#description_audio_files)).
/// @param textFile Plain text file, ASCII, ISO-8859 or UTF8 encoded.\n\nThe text should include one sentence or clause per line ending with a punctuation mark.
/// @param lang Language code of the input ([details](#description_langage_code_values))
/// @param model Model name
/// @param sampling Sampling quality of the audio file.\n * high: wide band audio such as radio and TV broadcast (sampling higher or equal to 16KHz)\n * low: telephone data with sampling rates higher or equal to 8KHz. It is highly recommended to not use a bit rate lower than 32Kbps.
/// @param callback Javascript callback function name for JSONP Support
/// 
///
/// @return SystranSpeechAlignResponse*
-(NSNumber*) multimodalSpeechAlignPostWithCompletionBlock :(NSURL*) audioFile 
     textFile:(NSURL*) textFile 
     lang:(NSString*) lang 
     model:(NSString*) model 
     sampling:(NSString*) sampling 
     callback:(NSString*) callback 
    
    completionHandler: (void (^)(SystranSpeechAlignResponse* output, NSError* error))completionBlock;
    


///
///
/// Speech language detection
/// Detect languages from an audio file.
///
/// @param audioFile Audio file ([details](#description_audio_files)).
/// @param sampling Sampling quality of the audio file.\n * high: wide band audio such as radio and TV broadcast (sampling higher or equal to 16KHz)\n * low: telephone data with sampling rates higher or equal to 8KHz. It is highly recommended to not use a bit rate lower than 32Kbps.
/// @param maxSpeaker Maximum number of speakers. Default 1 for low sampling and infinity for high sampling
/// @param callback Javascript callback function name for JSONP Support
/// 
///
/// @return SystranSpeechDetectLanguageResponse*
-(NSNumber*) multimodalSpeechDetectLanguagePostWithCompletionBlock :(NSURL*) audioFile 
     sampling:(NSString*) sampling 
     maxSpeaker:(NSNumber*) maxSpeaker 
     callback:(NSString*) callback 
    
    completionHandler: (void (^)(SystranSpeechDetectLanguageResponse* output, NSError* error))completionBlock;
    


///
///
/// Segment speech
/// Segment an audio file.
///
/// @param audioFile Audio file ([details](#description_audio_files)).
/// @param sampling Sampling quality of the audio file.\n * high: wide band audio such as radio and TV broadcast (sampling higher or equal to 16KHz)\n * low: telephone data with sampling rates higher or equal to 8KHz. It is highly recommended to not use a bit rate lower than 32Kbps.
/// @param maxSpeaker Maximum number of speakers. Default 1 for low sampling and infinity for high sampling
/// @param callback Javascript callback function name for JSONP Support
/// 
///
/// @return SystranSpeechSegmentResponse*
-(NSNumber*) multimodalSpeechSegmentPostWithCompletionBlock :(NSURL*) audioFile 
     sampling:(NSString*) sampling 
     maxSpeaker:(NSNumber*) maxSpeaker 
     callback:(NSString*) callback 
    
    completionHandler: (void (^)(SystranSpeechSegmentResponse* output, NSError* error))completionBlock;
    


///
///
/// Supported Languages
/// List of languages in which Speech is supported.
///
/// @param callback Javascript callback function name for JSONP Support
/// 
///
/// @return SystranSpeechSupportedLanguagesResponse*
-(NSNumber*) multimodalSpeechSupportedLanguagesGetWithCompletionBlock :(NSString*) callback 
    
    completionHandler: (void (^)(SystranSpeechSupportedLanguagesResponse* output, NSError* error))completionBlock;
    


///
///
/// Transcribe speech
/// Get text from an audio file.
///
/// @param audioFile Audio file ([details](#description_audio_files)).
/// @param lang Language code of the input ([details](#description_langage_code_values))
/// @param model Model name
/// @param sampling Sampling quality of the audio file.\n * high: wide band audio such as radio and TV broadcast (sampling higher or equal to 16KHz)\n * low: telephone data with sampling rates higher or equal to 8KHz. It is highly recommended to not use a bit rate lower than 32Kbps.
/// @param maxSpeaker Maximum number of speakers. Default 1 for low sampling and infinity for high sampling
/// @param callback Javascript callback function name for JSONP Support
/// 
///
/// @return SystranSpeechTranscribeResponse*
-(NSNumber*) multimodalSpeechTranscribePostWithCompletionBlock :(NSURL*) audioFile 
     lang:(NSString*) lang 
     model:(NSString*) model 
     sampling:(NSString*) sampling 
     maxSpeaker:(NSNumber*) maxSpeaker 
     callback:(NSString*) callback 
    
    completionHandler: (void (^)(SystranSpeechTranscribeResponse* output, NSError* error))completionBlock;
    



@end
